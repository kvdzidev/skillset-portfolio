package lab02;

import java.util.Arrays;
import java.util.Scanner;

public class zad02 {
    public static void main(String[] args) {
        System.out.println("Array size: ");
        Scanner s = new Scanner(System.in);
        int size = s.nextInt();
        int[] arr = new int[size];

        System.out.println("First element: ");
        arr[0] = s.nextInt();

        if(size == 1){
            printArr(arr);
            return;
        }

        if(arr[0] % 2 == 0){
            arr[1] = arr[0] + 2;
        } else {
            arr[1] = arr[0] + 1;
        }

        if(size == 2){
            printArr(arr);
            return;
        }

        for(int i = 2; i < size; i++){
            arr[i] = arr[i-1] + 2;
        }


        printArr(arr);
        System.out.printf("Min:\t%d\n", lowestElement(arr));
        System.out.printf("Max:\t%d\n", highestElement(arr));
        System.out.printf("Suma:\t%d\n", getSum(arr));
        System.out.printf("Srednia:\t%f\n", getAverage(arr));
        System.out.printf("Mediana:\t%f\n", getMedian(arr));
    }

    public static double getMedian(int[] arr){
        int[] newArr = arr;
        Arrays.sort(newArr);

        double median;
        if (newArr.length % 2 != 0){
           median = newArr[(newArr.length/2)];
        } else {
            median = newArr[newArr.length/2] + newArr[(newArr.length/2) + 1];
            median /= 2;
        }

        return median;
    }
    public static double getAverage(int[] arr){
        double dSum = getSum(arr);
        double dLength = arr.length;
        return dSum/dLength;
    }
    public static int getSum(int[] arr){
        int sum = 0;
        for(int i : arr){
            sum += i;
        }
        return sum;
    }
    public static void printArr(int[] arr){
        for(int i : arr){
            System.out.printf("%d\t" ,i);
        }
//        new line
        System.out.println();
    }
    public static int lowestElement(int[] arr){
//        New array because Arrays.sort() sorts in place;
        int[] newArr = arr;
        Arrays.sort(newArr);
        return newArr[0];
    }
    public static int highestElement(int[] arr){
//        New array because Arrays.sort() sorts in place;
        int[] newArr = arr;
        Arrays.sort(newArr);
        return newArr[arr.length-1];
    }
}